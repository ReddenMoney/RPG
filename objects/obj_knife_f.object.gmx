<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_knife_f</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_physics_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Field character characteristics
//What direction are you facing?
direct = cs_down
//What's your battle object?
battle = obj_knife_b
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Player Movement Logic
depth = -y
hspeed = 0
vspeed = 0
if !instance_exists(obj_text_handler) 
&amp;&amp; !instance_exists(obj_battle_starter)
&amp;&amp; !instance_exists(obj_battle_handler)
{
    if keyboard_check_direct(vk_left)
    {
        hspeed = -1;
        direct = cs_left
    }
    if keyboard_check_direct(vk_right)
    {
        hspeed = 1;
        direct = cs_right
    }
    if keyboard_check_direct(vk_up)
    {
        vspeed = -1;
        direct = cs_up
    }
    if keyboard_check_direct(vk_down)
    {
        vspeed = 1;
        direct = cs_down
    }
}
//NPC talk
if keyboard_check_pressed(cs_acceptKey) 
&amp;&amp; !instance_exists(obj_text_handler)
&amp;&amp; !instance_exists(obj_battle_starter)
&amp;&amp; !instance_exists(obj_battle_handler)
{
    var interact;
    //Check in specific directions depending on direct
    switch (direct)
    {
    case cs_left:
        interact = collision_rectangle(bbox_left-16,bbox_top-2,bbox_right,bbox_bottom+2,obj_interact_parent,0,0); break;
    case cs_right:
        interact = collision_rectangle(bbox_left,bbox_top-2,bbox_right+16,bbox_bottom+2,obj_interact_parent,0,0); break;
    case cs_up:
        interact = collision_rectangle(bbox_left-2,bbox_top-16,bbox_right+2,bbox_bottom,obj_interact_parent,0,0); break;
    case cs_down:
        interact = collision_rectangle(bbox_left-2,bbox_top,bbox_right+2,bbox_bottom+16,obj_interact_parent,0,0); break;
    }

    if interact
    {
        with interact event_user(0)
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_enemy_f_parent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Enemy collision
if other.active == true
{
    if !instance_exists(obj_battle_starter)
        instance_create(x,y,obj_battle_starter)
    var battle = instance_create(SCREEN_WIDTH/2,148,other.battle)
    ds_list_add(obj_battle_starter.enemyList,battle)
    other.active = false
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
